# @format
query getManySkills(
  $where: SkillsWhereInput
  $orderBy: [SkillsOrderByWithRelationInput!]
  $cursor: SkillsWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillsScalarFieldEnum!]
) {
  findFirstSkills(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    id
    skillId
    videos
    athleteId
    secondValue
    value
    verified
    verifiedAt
    createdAt
    skillType {
      id
      name
      options
      numberOfVideos
      secondFieldName
      secondValueOptions
      videosLabels
    }
    athlete {
      id
    }
  }
}

query getFindManySkills(
  $where: SkillsWhereInput
  $orderBy: [SkillsOrderByWithRelationInput!]
  $cursor: SkillsWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillsScalarFieldEnum!]
) {
  findManySkills(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    id
    skillId
    videos
    athleteId
    secondValue
    createdAt
    value
    verified
    verifiedAt
    skillType {
      id
      name
      options
      numberOfVideos
      secondFieldName
      secondValueOptions
      videosLabels
    }
    athlete {
      id
    }
  }
}

# query getskillsTypes($where: SkillsWhereInput, $orderBy: [SkillTypeOrderByWithRelationInput!]) {
#   skillTypes(orderBy: $orderBy) {
#     id
#     name
#     options
#     numberOfVideos
#     secondFieldName
#     secondValueOptions
#     videosLabels
#     description
#     unit
#     skills(where: $where) {
#       id
#       videos
#       secondValue
#       value
#       skillVerificationRequests(
#         where: { verified: { equals: true } }
#         take: 1
#         orderBy: { createdAt: desc }
#       ) {
#         id
#       }
#     }
#   }
# }

query getAthleteSkillTypes(
  $whereSkillType: SkillTypeWhereInput
  $where: SkillsWhereInput
  $orderBy: [SkillTypeOrderByWithRelationInput!]
  $cursor: SkillTypeWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillTypeScalarFieldEnum!]
) {
  skillTypes(
    where: $whereSkillType
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    id
    name
    options
    numberOfVideos
    secondFieldName
    secondValueOptions
    videosLabels
    description
    position
    isPrimaryForRecruitment
    unit
    createdAt
    _count {
      skills
    }
    skills(where: $where) {
      id
      videos
      skillId
      secondValue
      value
      athleteId
      athlete {
        id
        userId
      }
      verified
      createdAt
      skillHistory {
        id
        value
        secondValue
        videos
        skillId
        athleteId
      }
      skillVerificationRequests(
        # where: { verified: { equals: true } }
        take: 3
        orderBy: { createdAt: desc }
      ) {
        id
        uuid
        verified
        campId
        userId
        skillId
        createdAt
        updatedAt
        dateOfVerfication
        camp {
          id
          name
        }
      }
    }
  }
}

query getSkillTypes(
  $where: SkillTypeWhereInput
  $orderBy: [SkillTypeOrderByWithRelationInput!]
  $cursor: SkillTypeWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillTypeScalarFieldEnum!]
) {
  skillTypes(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    name
    id
    uuid
    mask
    unit
    options
    createdAt
    updatedAt
    position
    numberOfVideos
    secondFieldName
    description
    secondValueOptions
    videosLabels
    _count {
      skills
    }
    skills {
      id
      videos
      skillId
      secondValue
      value
      athleteId
      verified
      createdAt
      updatedAt
      skillId
      skillHistory {
        id
        uuid
        skillId
        value
        secondValue
        athleteId
      }
      skillVerificationRequests {
        id
        uuid
        userId
        skillId
        campId
      }
    }
  }
}

query getSkillType($where: SkillTypeWhereUniqueInput!) {
  skillType(where: $where) {
    id
    uuid
    name
    mask
    unit
    options
    numberOfVideos
    position
    secondFieldName
    description
    secondValueOptions
    videosLabels
    createdAt
    updatedAt
    position
    icon
    isPrimaryForRecruitment
    _count {
      skills
    }
  }
}

query getSkillHistories(
  $where: SkillHistoryWhereInput
  $orderBy: [SkillHistoryOrderByWithRelationInput!]
  $cursor: SkillHistoryWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillHistoryScalarFieldEnum!]
) {
  skillHistories(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    id
    uuid
    createdAt
    updatedAt
    skillId
    value
    videos
    secondValue
    verified
    verifiedAt
    athleteId
    skill {
      id
      value
      secondValue
      videos
      verified
      createdAt
      updatedAt
      skillType {
        id
        uuid
        name
        secondFieldName
        description
      }
    }
  }
}

mutation createSkill($data: SkillsCreateInput!) {
  createOneSkills(data: $data) {
    id
    videos
    secondValue
    value
    createdAt
    verified
    verifiedAt
    athleteId
    updatedAt
    skillId
    skillType {
      id
      name
      options
      numberOfVideos
      secondFieldName
      secondValueOptions
      videosLabels
    }
  }
}

mutation upsertOneSkill(
  $where: SkillsWhereUniqueInput!
  $create: SkillsCreateInput!
  $update: SkillsUpdateInput!
) {
  upsertOneSkills(create: $create, where: $where, update: $update) {
    id
    videos
  }
}

mutation updateOneSkill(
  $data: SkillsUpdateInput!
  $where: SkillsWhereUniqueInput!
) {
  updateOneSkills(data: $data, where: $where) {
    id
    videos
    secondValue
    value
    createdAt
    verified
    verifiedAt
    athleteId
    updatedAt
    skillId
    skillType {
      id
      name
      options
      numberOfVideos
      secondFieldName
      secondValueOptions
      videosLabels
    }
  }
}

mutation createOneSkillVerification(
  $data: SkillVerificationRequestCreateInput!
) {
  createOneSkillVerificationRequest(data: $data) {
    id
    uuid
    skillId
    userId
    campId
    dateOfVerfication
    verified
    createdAt
    camp {
      name
      id
      uuid
      address
      description
    }
  }
}

mutation updateSkillVerificationRequest(
  $data: SkillVerificationRequestUpdateInput!
  $where: SkillVerificationRequestWhereUniqueInput!
) {
  updateOneSkillVerificationRequest(data: $data, where: $where) {
    id
    uuid
    skillId
    userId
    campId
  }
}

query getSkillVerificationRequests(
  $where: SkillVerificationRequestWhereInput
  $orderBy: [SkillVerificationRequestOrderByWithRelationInput!]
  $cursor: SkillVerificationRequestWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillVerificationRequestScalarFieldEnum!]
) {
  skillVerificationRequests(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    id
    uuid
    dateOfVerfication
    verified
    createdAt
    updatedAt
    skillId
    userId
    skill {
      id
      athleteId
      videos
      secondValue
      value
      skillType {
        id
        name
        description
        secondFieldName
        skills {
          value
        }
      }
    }
    user {
      id
      firstname
      surname
      username
      avatar
      email
      avatar
      email
    }
    camp {
      name
      id
      uuid
      address
      description
    }
  }
}

query getSkillVerificationRequest(
  $where: SkillVerificationRequestWhereUniqueInput!
) {
  skillVerificationRequest(where: $where) {
    id
    uuid
    dateOfVerfication
    verified
    createdAt
    updatedAt
    skillId
    userId
    skill {
      id
      athleteId
      videos
      secondValue
      value
      skillType {
        id
        name
        description
        secondFieldName
        skills {
          value
        }
      }
    }
    user {
      id
      firstname
      surname
      username
      avatar
      email
      avatar
      email
      athleteProfile {
        id
        verified
        userId
        verifiedBy {
          title
          user {
            username
            firstname
            surname
          }
        }
      }
    }
    camp {
      name
      id
      uuid
      address
      description
    }
  }
}

query getCamps(
  $where: CampWhereInput
  $orderBy: [CampOrderByWithRelationInput!]
  $cursor: CampWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [CampScalarFieldEnum!]
) {
  camps(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    id
    name
    description
    address
    dateOfEvent
    createdAt
    updatedAt
  }
}

mutation createSkillType($data: SkillTypeCreateInput!) {
  createOneSkillType(data: $data) {
    id
    name
    options
    numberOfVideos
    secondFieldName
    secondValueOptions
    videosLabels
    description
    position
    isPrimaryForRecruitment
    unit
  }
}

mutation updateSkillType(
  $data: SkillTypeUpdateInput!
  $where: SkillTypeWhereUniqueInput!
) {
  updateOneSkillType(data: $data, where: $where) {
    id
    name
    options
    numberOfVideos
    secondFieldName
    secondValueOptions
    videosLabels
    description
    position
    isPrimaryForRecruitment
    unit
  }
}

mutation deleteSkillType($where: SkillTypeWhereUniqueInput!) {
  deleteOneSkillType(where: $where) {
    id
    uuid
    name
  }
}

mutation deleteManySkillVerificationRequest(
  $where: SkillVerificationRequestWhereInput
) {
  deleteManySkillVerificationRequest(where: $where) {
    count
  }
}

mutation deleteManySkills($where: SkillsWhereInput) {
  deleteManySkills(where: $where) {
    count
  }
}

mutation deleteManySkillHistory($where: SkillHistoryWhereInput) {
  deleteManySkillHistory(where: $where) {
    count
  }
}

mutation createHistory($data: SkillHistoryCreateInput!) {
  createOneSkillHistory(data: $data) {
    id
  }
}
