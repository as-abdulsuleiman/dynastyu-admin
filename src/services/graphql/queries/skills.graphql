# @format
query getManySkills(
  $where: SkillsWhereInput
  $orderBy: [SkillsOrderByWithRelationInput!]
  $cursor: SkillsWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillsScalarFieldEnum!]
) {
  findFirstSkills(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    id
    skillId
    videos
    athleteId
    secondValue
    value
    skillType {
      id
      name
      options
      numberOfVideos
      secondFieldName
      secondValueOptions
      videosLabels
    }
    athlete {
      id
    }
  }
}


# query skillsTypes($where: SkillsWhereInput, $orderBy: [SkillTypeOrderByWithRelationInput!] $cursor: SkillTypeWhereUniqueInput
#   $take: Int
#   $skip: Int
#   $distinct: [SkillTypeScalarFieldEnum!] ) {
#   skillTypes(
#     orderBy: $orderBy
#     take: $take
#     skip: $skip
#     distinct: $distinct
#     cursor: $cursor) {
#     id
#     name
#     options
#     numberOfVideos
#     secondFieldName
#     secondValueOptions
#     videosLabels
#     description
#     position
#     isPrimaryForRecruitment
#     unit
#     _count{
#       skills
#     }
#     skills(where: $where) {
#       id
#       videos
#       skillId
#       secondValue
#       value
#       athleteId
#       verified
#       createdAt
#       skillVerificationRequests{
#         id
#         uuid
#       } 
#     }
#   }
# }

query getSkillTypes(
  $where: SkillTypeWhereInput
  $orderBy: [SkillTypeOrderByWithRelationInput!]
  $cursor: SkillTypeWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillTypeScalarFieldEnum!]
) {
  skillTypes(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    name
    id
    uuid
    mask
    unit
    options
    numberOfVideos
    secondFieldName
    description
    secondValueOptions
    videosLabels
     _count{
      skills
    }
    skills{
      id
      videos
      skillId
      secondValue
      value
      athleteId
      verified
      createdAt
      skillId
      skillHistory{
        id
        uuid
        skillId
        value
        secondValue
        athleteId
      }
      skillVerificationRequests{
        id
        uuid
        userId
        skillId
      }
    }
  }
}


query getSkillType($where: SkillTypeWhereUniqueInput!) {
  skillType(where: $where) {
    id
    uuid
    name
    mask
    unit
    options
    numberOfVideos
    secondFieldName
    description
    secondValueOptions
    videosLabels
    position
    icon
    isPrimaryForRecruitment
    _count {
      skills
    }
  }
}

mutation createSkill($data: SkillsCreateInput!) {
  createOneSkills(data: $data) {
    id
    videos
    secondValue
    value
    skillType {
      id
      name
      options
      numberOfVideos
      secondFieldName
      secondValueOptions
      videosLabels
    }
  }
}

mutation upsertOneSkill(
  $where: SkillsWhereUniqueInput!
  $create: SkillsCreateInput!
  $update: SkillsUpdateInput!
) {
  upsertOneSkills(create: $create, where: $where, update: $update) {
    id
    videos
  }
}

mutation updateOneSkill(
  $data: SkillsUpdateInput!
  $where: SkillsWhereUniqueInput!
) {
  updateOneSkills(data: $data, where: $where) {
    id
    videos
  }
}

mutation createOneSkillVerification(
  $data: SkillVerificationRequestCreateInput!
) {
  createOneSkillVerificationRequest(data: $data) {
    id
    uuid
    skillId
    userId
    campId
  }
}

mutation updateSkillVerificationRequest(
  $data: SkillVerificationRequestUpdateInput!
  $where: SkillVerificationRequestWhereUniqueInput!
) {
  updateOneSkillVerificationRequest(data: $data, where: $where) {
    id
    uuid
    skillId
    userId
    campId
  }
}

query getSkillVerificationRequests(
  $where: SkillVerificationRequestWhereInput
  $orderBy: [SkillVerificationRequestOrderByWithRelationInput!]
  $cursor: SkillVerificationRequestWhereUniqueInput
  $take: Int
  $skip: Int
  $distinct: [SkillVerificationRequestScalarFieldEnum!]
) {
  skillVerificationRequests(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
    distinct: $distinct
    cursor: $cursor
  ) {
    id
    uuid
    dateOfVerfication
    verified
    createdAt
    updatedAt
    skillId
    userId
    skill {
      id
      athleteId
      videos
      secondValue
      value
      skillType {
        id
        name
        description
        secondFieldName
        skills {
          value
        }
      }
    }
    user {
      id
      firstname
      surname
      username
      avatar
      email
      avatar
      email
    }
    camp {
      name
      id
      uuid
      address
      description
    }
  }
}

query getSkillVerificationRequest(
  $where: SkillVerificationRequestWhereUniqueInput!
) {
  skillVerificationRequest(where: $where) {
    id
    uuid
    dateOfVerfication
    verified
    createdAt
    updatedAt
    skillId
    userId
    skill {
      id
      athleteId
      videos
      secondValue
      value
      skillType {
        id
        name
        description
        secondFieldName
        skills {
          value
        }
      }
    }
    user {
      id
      firstname
      surname
      username
      avatar
      email
      avatar
      email
      athleteProfile {
        id
        verified
        userId
        verifiedBy {
          title
          user {
            username
            firstname
            surname
          }
        }
      }
    }
    camp {
      name
      id
      uuid
      address
      description
    }
  }
}

mutation createSkillType($data: SkillTypeCreateInput!) {
  createOneSkillType(data: $data) {
    id
    name
    options
    numberOfVideos
    secondFieldName
    secondValueOptions
    videosLabels
    description
    position
    isPrimaryForRecruitment
    unit
  }
}

mutation updateSkillType($data: SkillTypeUpdateInput!  $where: SkillTypeWhereUniqueInput!) {
  updateOneSkillType(data: $data where: $where) {
    id
    name
    options
    numberOfVideos
    secondFieldName
    secondValueOptions
    videosLabels
    description
    position
    isPrimaryForRecruitment
    unit
  }
}

mutation deleteSkillType($where: SkillTypeWhereUniqueInput!) {
  deleteOneSkillType(where: $where) {
    id
    uuid
    name
  }
}

mutation deleteManySkillVerificationRequest($where: SkillVerificationRequestWhereInput) {
  deleteManySkillVerificationRequest(where: $where) {
    count
  }
}

mutation deleteManySkills($where: SkillsWhereInput) {
  deleteManySkills(where: $where) {
    count
  }
}

mutation deleteManySkillHistory($where: SkillHistoryWhereInput) {
  deleteManySkillHistory(where: $where) {
    count
  }
}


